using DataModels;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Numerics;
using System.Text;
using System.Threading.Tasks;

namespace Cryptanalysis
{
    public static class Keys
    {

        public static int[] Base60Data = new int[] { 203, 231, 167, 186, 97, 237, 126, 183, 92, 249, 156, 222, 247, 4, 183, 212, 121, 202, 15, 33, 102, 137, 59, 87, 109, 198, 173, 25, 150, 66, 141, 133, 115, 114, 197, 39, 54, 80, 133, 5, 80, 84, 28, 73, 230, 81, 199, 76, 253, 16, 21, 59, 86, 171, 156, 80, 254, 118, 146, 69, 106, 196, 124, 51, 122, 255, 25, 192, 199, 73, 169, 108, 164, 79, 205, 177, 114, 144, 46, 82, 142, 58, 201, 193, 173, 28, 111, 65, 211, 220, 198, 49, 236, 84, 56, 35, 222, 150, 72, 34, 83, 229, 32, 206, 122, 63, 31, 218, 14, 184, 32, 115, 73, 143, 197, 247, 54, 171, 35, 184, 42, 237, 86, 54, 13, 20, 163, 193, 201, 179, 86, 120, 169, 141, 72, 171, 10, 129, 233, 13, 245, 46, 160, 152, 125, 210, 92, 173, 246, 174, 153, 189, 231, 33, 14, 112, 52, 251, 249, 248, 233, 217, 192, 82, 105, 18, 250, 248, 240, 228, 254, 54, 174, 117, 209, 18, 235, 131, 166, 175, 144, 40, 167, 81, 128, 156, 19, 81, 38, 192, 170, 33, 0, 155, 159, 89, 176, 115, 105, 47, 110, 74, 209, 68, 194, 76, 127, 21, 57, 175, 6, 61, 70, 150, 251, 84, 142, 219, 148, 59, 58, 52, 51, 151, 68, 52, 73, 249, 144, 0, 117, 175, 106, 234, 196, 121, 238, 32, 129, 173, 144, 141, 42, 214, 22, 56, 198, 192, 113, 158, 172, 230, 180, 36, 189, 80 };
        public static readonly BigInteger[,] M5x5x1033 = new BigInteger[,]
            {{272,138,341,131,151},
            {366,199,130,320,18},
            {226,245,91,245,226},
            {18,320,130,199,366},
            {151,131,341,138,272}};
        public static readonly Word M5x5 = (new int[] { 272, 138, 341, 131, 151 ,
            366,199,130,320,18,
            226,245,91,245,226,
            18,320,130,199,366,
            151,131,341,138,272}).AsWord();


        public static readonly Word KeyM51033 = (new int[] {
            2,7,2,1,3,8,3,4,1,1,3,1,1,5,1,
            3,6,6,1,9,9,1,3,0,3,2,0,1,8,
            2,2,6,2,4,5,9,1,2,4,5,2,2,6,
            1,8,3,2,0,1,3,0,1,9,9,3,6,6,
            1,5,1,1,3,1,3,4,1,1,3,8,2,7,2}).AsWord();

        public static readonly BigInteger[,] M295x5x1033 = M5x5x1033.Mod(29);
        public static readonly BigInteger[,] M295x5x1033_I = M295x5x1033.ModInverse(29);


        public static readonly BigInteger[,] M5x5x1033_I = M5x5x1033.ModInverse(29);

        public static readonly BigInteger[,] M5x5x3301 = new BigInteger[,]
            {{434,1311,312,278,966},
            {204,812,934,280,1071},
            {626,620,809,620,626},
            {1071,280,934,812,204},
            {966,278,312,1311,434}};

        public static readonly Word KeyM53301 = (new int[] {
            4,3,4,1,3,1,1,3,1,2,2,7,8,9,6,6,
            2,0,4,8,1,2,9,3,4,2,8,0,1,0,7,1,
            6,2,6,6,2,0,8,0,9,6,2,0,6,2,6,
            1,0,7,1,2,8,0,9,3,4,8,1,2,2,0,4,
            9,6,6,2,7,8,3,1,2,1,3,1,1,4,3,4}).AsWord();

        public static readonly BigInteger[,] M5x5x3301_I = M5x5x3301.ModInverse(29);

        public static readonly BigInteger[,] M7x7x1033 = new BigInteger[,]
            {{7,375,236,190,27,17,181},
            {351,223,14,47,293,98,7},
            {456,232,121,114,72,23,15},
            {16,65,270,331,270,65,16},
            {15,23,72,114,121,232,456},
            {7,98,293,47,14,223,351},
            {181,17,27,190,236,375,7}};

        public static readonly Word KeyM73301 = (new int[] {
            7,3,7,5,2,3,6,1,9,0,2,7,1,7,1,8,1,
            3,5,1,2,2,3,1,4,4,7,2,9,3,9,8,7,
            4,5,6,2,3,2,1,2,1,1,1,4,7,2,2,3,1,5,
            1,6,6,5,2,7,0,3,3,1,2,7,0,6,5,1,6,
            1,5,2,3,7,2,1,1,4,1,2,1,2,3,2,4,5,6,
            7,9,8,2,9,3,4,7,1,4,2,2,3,3,5,1,
            1,8,1,1,7,2,7,1,9,0,2,3,6,3,7,5,7
        }).AsWord();

        public static readonly BigInteger[,] M7x7x1033_I = M7x7x1033.ModInverse(29);
    }
}
